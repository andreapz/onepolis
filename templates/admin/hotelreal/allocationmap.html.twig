{% extends 'admin/layout.html.twig' %}

{% block bigform %}

<nav class="navbar navbar-expand-lg navbar-dark bg-primary col-sm-12">

<form name="match" method="post" class="form-inline my-2 my-lg-0">
    <select id="show_options" name="show[opt]" class="form-control mr-sm-2">
        <option value="0">Mappa</option>
        <option value="1">Lista</option>
    </select>
    
    <select id="show_age" name="show[opt]" class="form-control mr-sm-2">
        <option value="0">Tutti</option>
        <option value="1">0 - 4</option>
        <option value="2">5 - 8</option>
        <option value="3">9 - 17</option>
        <option value="4">18 - 30</option>
    </select>
</form>
        
</nav>
    
<div id="tasks" class="col-lg-12"></div>

{% endblock %}


{% block sidebar %}
<div class="modal" id="modal-from-dom" >
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h3 class="modal-title">{{ 'proceed_update_room_note'|trans }}</h3>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form name="match" method="post" class="form-inline my-2 my-lg-0" id="form_note" rel="">
            <input type="text" class="form-control" placeholder="Note" id="input_note">
            <button type="submit" class="btn btn-primary" id="form_btn">Aggiorna</button>
          </form>
          <div id="noteresult"></div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Esci</button>
        </div>
      </div>
    </div>
</div>
{% endblock %}


{% block javascripts %}
    {{ parent() }}
    <script>
        var formurl = '{{ path('admin_hotel_update_room_note') }}';
        var url = "{{ url }}";
        var hotelData = null;
        
        $.post(url, function(response) {
            hotelData = response;
            showReport($('#show_options').val());
        }, 'JSON');
       
       var showReport = function(val) {
           $('#tasks').empty();
           if (hotelData) {
               if (val == 0) {
                   $('#show_age').hide();
                   showMap(hotelData);
               } 
               else if (val == 1) {
                   $('#show_age').show();
                   showList(hotelData);
               } 
            }
       };
       
        $('#show_options').change(function() {
            showReport($(this).val());
        });
        
        $('#show_age').change(function() {
            showReport($('#show_options').val());
        });
        
        var showMap = function(response) {
            
            for(var k in response) {
                var totalcost = 0;
                var s = '';
                
                s += '<h2>' + response[k]['name'] + '</h2>';
                s += '{{ 'room.total_price'|trans|raw }}: <span id="hotel_total_cost_' + k + '"></span>';
                s += '<table class="table table-hover"><thead><tr>';

                s += '<th scope="col">{{ 'label.room'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.note'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.guests'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.reserved'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'room.price'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.name'|trans|raw }} {{ 'label.surname'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.room'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.transport'|trans|raw }}</th>';

                s += '</tr></thead><tbody>';
                
                for(var r in response[k]['rooms']) {
                    
                    var cnames = "";

                    for(var t in response[k]['rooms'][r]['tasks']) {
                        
                        cnames += '<a href="' + response[k]['rooms'][r]['tasks'][t]['url'] + '" target="blank">{{ 'task.task'|trans|raw }}: ' + t + '</a> ';
                        for(var c in response[k]['rooms'][r]['tasks'][t]['citizens']) {
                            var cx = response[k]['rooms'][r]['tasks'][t]['citizens'][c];
                            cnames += cx['name'] + ' ' + cx['surname'] + ' [' + cx['age'] + ' anni], ';
                        }
                    }
                    
                    s += '<tr><th scope="row">' + response[k]['rooms'][r]['rrname'] + '</th><td class="room_note" id="room_note_'+response[k]['rooms'][r]['idnote']+'" rel="' + response[k]['rooms'][r]['idnote'] +' ">'  + response[k]['rooms'][r]['note'] + '</th><td>'  + response[k]['rooms'][r]['guests'] + '</td><td>' + response[k]['rooms'][r]['reserved'] + '</td><td>' + response[k]['rooms'][r]['price'] + '</td><td>' ;
                    s +=  cnames  + '</td><td>' + cx['room']  + '</td><td>';
                    if (response[k]['rooms'][r]['transport']) {
                        s += response[k]['rooms'][r]['transport'];
                    }
                    s += '</td></tr>'; 
                    totalcost += parseFloat(response[k]['rooms'][r]['price']);
                }
                
                
                s += '</tbody></table>';
                
                
                s += '<table class="table table-hover"><thead><tr>';

                s += '<th scope="col">{{ 'label.room'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.room'|trans|raw }}</th>';                
                s += '<th scope="col">{{ 'label.reserved'|trans|raw }}</th>';


                s += '</tr></thead><tbody>';
                
                for(var b in response[k]['bundles']) {
                    
                    for(var r in response[k]['bundles'][b]['rooms']) {
                        var roomb = response[k]['bundles'][b]['rooms'][r];
                        s += '<tr><th scope="row">' + b + '</th><td>'  +  roomb['name'] + '</td><td>' + roomb['reserved'] + '</td><td>' ;
                    }
                }
                
                
                s += '</tbody></table>';

               $('#tasks').append(s);
               
               $('#hotel_total_cost_'+k).text(totalcost+'â‚¬');
               
               $('.room_note').on('click', function(e) {
                    e.preventDefault();
                    var rel = $(this).attr('rel');
                    $('#form_note').attr('rel', rel);
                    $('#input_note').val($(this).text())
                    $('#modal-from-dom').modal('show');
                });
            }

       };

        var showList = function(response) {
            
            var ageValue = $('#show_age').val();
            var minAge = 0;
            var maxAge = 200
            
            if (ageValue == 1) {
                minAge = 0;
                maxAge = 4;
            } else if (ageValue == 2) {
                minAge = 5;
                maxAge = 8;
            } else if (ageValue == 3) {
                minAge = 9;
                maxAge = 17;
            } else if (ageValue == 4) {
                minAge = 18;
                maxAge = 30;
            }
        
            for(var k in response) {
                var s = '';
                
                s += '<h2>' + response[k]['name'] + '</h2>';
                s += '<table class="table table-hover"><thead><tr>';
                s += '<th scope="col">{{ 'label.room'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.note'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.guests'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.reserved'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'task.task'|trans|raw }}</th>';
                
                
                s += '<th scope="col">{{ 'label.name'|trans|raw }} {{ 'label.surname'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.cityBirth'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.address'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.room'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.meals'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.transport'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.note'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.roomNote'|trans|raw }}</th>';

                s += '</tr></thead><tbody>';
                
                for(var r in response[k]['rooms']) {
                    
                    
                    for(var t in response[k]['rooms'][r]['tasks']) {
                        
                        
                        for(var c in response[k]['rooms'][r]['tasks'][t]['citizens']) {
                            var cx = response[k]['rooms'][r]['tasks'][t]['citizens'][c];
                            
                            if (cx['age'] >= minAge && cx['age'] <= maxAge) {
                                s += '<tr><th scope="row">' + response[k]['rooms'][r]['rrname'] + '</th><td>' + response[k]['rooms'][r]['note'] + '</td><td>' + response[k]['rooms'][r]['guests'] + '</td><td>' + response[k]['rooms'][r]['reserved'] + '</td><td>';
                                s +=  '<a href="' + response[k]['rooms'][r]['tasks'][t]['url'] + '" target="blank">{{ 'task.task'|trans|raw }}: ' + t + '</a></td><td>' + cx['name'] + ' ' + cx['surname'] + ' [' + cx['age'] + ' anni], '  + '</td>';
                                s += '<td>' + cx['cbirthdate'] + ' ' + cx['city_birth'] + '</td>';
                                s += '<td>' + cx['street'] + ' ' + cx['postcode'] + ' ' + cx['city'] + ' (' + cx['province'] + ') ' + cx['state'] + '</td>';
                                s += '<td>' + cx['room']  + '</td><td>';
                                if (typeof cx['meals'] !== 'undefined' && !Array.isArray(cx['meals']) ) {
                                    for(var m in cx['meals']) {
                                        if (m > 0) {
                                            s += cx['meals'][m] + ', ';
                                        }
                                    }
                                }
                                s += '</td><td>';
                                if (typeof cx['transports'] !== 'undefined' && !Array.isArray(cx['transports']) ) {
                                    for(var tr in cx['transports']) {
                                        if (tr > 0) {
                                            s += cx['transports'][tr] + ', ';
                                        }
                                    }
                                }
                                s += '<td>' + cx['cnote']  + '</td><td>';
                                s += '<td>' + cx['roomnote']  + '</td><td>';
                                s += '</td></tr>'; 
                            }
                        }
                    }
                    
                    

                }
                
                
                s += '</tbody></table>';
                
                
                s += '<table class="table table-hover"><thead><tr>';

                s += '<th scope="col">{{ 'label.room'|trans|raw }}</th>';
                s += '<th scope="col">{{ 'label.room'|trans|raw }}</th>';                
                s += '<th scope="col">{{ 'label.reserved'|trans|raw }}</th>';


                s += '</tr></thead><tbody>';
                
                for(var b in response[k]['bundles']) {
                    
                    for(var r in response[k]['bundles'][b]['rooms']) {
                        var roomb = response[k]['bundles'][b]['rooms'][r];
                        s += '<tr><th scope="row">' + b + '</th><td>'  +  roomb['name'] + '</td><td>' + roomb['reserved'] + '</td><td>' ;
                    }
                }
                
                
                s += '</tbody></table>';

               $('#tasks').append(s);
               
            }
        };

        

        $('#form_note').unbind('submit').bind('submit', function(e) {

            $('.alert').remove();
            e.preventDefault();
            $('#form_btn').hide();

            var formSerialize = $(this).serialize();

            $.post(formurl, { 'i': $('#form_note').attr('rel'), 'n': $('#input_note').val()}, function(response) {

                if (response['status']=='OK') {
                    $('#noteresult').append('<div class="alert alert-dismissible alert-success"><button type="button" class="close" data-dismiss="alert">&times;</button><strong>Well done!</strong></div>');
                    var rel = $('#form_note').attr('rel');
                    $('#room_note_'+rel).text($('#input_note').val());
                    $('#form_btn').show();
                    $('#modal-from-dom').modal('hide');
                } else {
                    $('#noteresult').append('<div class="alert alert-dismissible alert-danger"><button type="button" class="close" data-dismiss="alert">Ã—</button><strong>Ops!</strong> Qualcosa Ã¨ andato storto. Controlla i dati e riprova.</div>');
                    $('#form_btn').show();
                }
            }, 'JSON');
        });
    </script>
{% endblock %}
